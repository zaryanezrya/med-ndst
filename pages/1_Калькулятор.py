import streamlit as st
import joblib
import pandas as pd

st.set_page_config(
    page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä",
    page_icon="üëã",
)

models = {}
models['mlp'] = joblib.load('models/mlp.joblib')
models['rfc'] = joblib.load('models/rfc.joblib')
models['gnb'] = joblib.load('models/gnb.joblib')
models['logreg'] = joblib.load('models/logreg.joblib')

st.write("# –ê–Ω–∞–ª–∏–∑ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —Ä–∞–∑–≤–∏—Ç–∏—è –ñ–≠–°")
data = {}
data['–í–æ–∑—Ä–∞—Å—Ç'] = st.slider('–í–æ–∑—Ä–∞—Å—Ç, –ª–µ—Ç', min_value=10, max_value=59, value=14)
data['–†–æ—Å—Ç,–º'] = st.slider('–†–æ—Å—Ç, –º', min_value=1.2, max_value=2.0, value=1.86)
data['–í–µ—Å'] = st.slider('–í–µ—Å, –∫–≥', min_value=26.0, max_value=85.0, value=56.0)

data['–≠–ø–∏–∑–æ–¥—ã —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–π'] = st.selectbox('–≠–ø–∏–∑–æ–¥—ã —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–π', ['–ù–µ—Ç', '–î–∞'])
data['–ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ'] = st.selectbox('–ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ', ['–ù–µ—Ç', '–î–∞'])

data['–°–ê–îd'] = st.slider('–°–ê–îd', min_value=88.0, max_value=136.0, value=102.0)
data['–°–ê–îs'] = st.slider('–°–ê–îs', min_value=90.0, max_value=134.0, value=100.0)

data['–ò—Ç–æ–≥'] = st.slider('–°—É–º–º–∞—Ä–Ω—ã–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ù–î–°–¢', min_value=3.99, max_value=87.83, value=61.44)


def models_report(data):
    keys = ['–í–µ—Å', '–ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ', '–†–æ—Å—Ç,–º', '–°–ê–îd', '–ò–ú–¢', '–°–ê–îs',
       '–≠–ø–∏–∑–æ–¥—ã —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–π', '–ò–Ω–¥–µ–∫—Å –í–∞—Ä–≥–µ (–ò–í)', '–ò—Ç–æ–≥', '–í–æ–∑—Ä–∞—Å—Ç']
    df = pd.Series(data).to_frame().T
    df = df[keys]
    st.write('---')

    st.write(f"–ò–ú–¢: {data['–ò–ú–¢']}")
    st.write(f"–ò–Ω–¥–µ–∫—Å –í–∞—Ä–≥–µ (–ò–í): {data['–ò–Ω–¥–µ–∫—Å –í–∞—Ä–≥–µ (–ò–í)']}")


    st.write('---')
    st.write('# –†–µ–∑—É–ª—å—Ç–∞—Ç')

    st.write('### –ù–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å')
    st.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'–í–µ—Ä–æ—è—Ç–Ω–æ —Ä–∞–∑–≤–∏—Ç–∏–µ –ñ–≠–°' if models['mlp'].predict(df)[0] else '–ñ–≠–° –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å —Ä–∞–∑–≤–∏—Ç–∏—è –ñ–≠–°: {models['mlp'].predict_proba(df)[0][1]}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ñ–≠–°: { models['mlp'].predict_proba(df)[0][0]}")

    st.write('### –ë–∞–π–µ—Å–æ–≤—Å–∫–∏–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä')
    st.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'–í–µ—Ä–æ—è—Ç–Ω–æ —Ä–∞–∑–≤–∏—Ç–∏–µ –ñ–≠–°' if models['gnb'].predict(df)[0] else '–ñ–≠–° –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å —Ä–∞–∑–≤–∏—Ç–∏—è –ñ–≠–°: {models['gnb'].predict_proba(df)[0][1]}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ñ–≠–°: { models['gnb'].predict_proba(df)[0][0]}")

    st.write('### –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è')
    st.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'–í–µ—Ä–æ—è—Ç–Ω–æ —Ä–∞–∑–≤–∏—Ç–∏–µ –ñ–≠–°' if models['logreg'].predict(df)[0] else '–ñ–≠–° –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å —Ä–∞–∑–≤–∏—Ç–∏—è –ñ–≠–°: {models['logreg'].predict_proba(df)[0][1]}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ñ–≠–°: { models['logreg'].predict_proba(df)[0][0]}")

    st.write('### –°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å (–¥–µ—Ä–µ–≤—å—è —Ä–µ—à–µ–Ω–∏–π)')
    st.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'–í–µ—Ä–æ—è—Ç–Ω–æ —Ä–∞–∑–≤–∏—Ç–∏–µ –ñ–≠–°' if models['rfc'].predict(df)[0] else '–ñ–≠–° –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å —Ä–∞–∑–≤–∏—Ç–∏—è –ñ–≠–°: {models['rfc'].predict_proba(df)[0][1]}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ñ–≠–°: { models['rfc'].predict_proba(df)[0][0]}")

if st.button('–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç'):
    data['–≠–ø–∏–∑–æ–¥—ã —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–π'] = 1 if data['–≠–ø–∏–∑–æ–¥—ã —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–π'] == '–î–∞' else 0
    data['–ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ'] = 1 if data['–ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ'] == '–î–∞' else 0

    data['–ò–ú–¢'] = data['–í–µ—Å'] / (data['–†–æ—Å—Ç,–º']*data['–†–æ—Å—Ç,–º'])
    data['–ò–Ω–¥–µ–∫—Å –í–∞—Ä–≥–µ (–ò–í)'] = (data['–í–µ—Å']*1000) / ((data['–†–æ—Å—Ç,–º']*100)**2) - (data['–í–æ–∑—Ä–∞—Å—Ç']/100)
    
    models_report(data)