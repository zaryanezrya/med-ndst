import streamlit as st
import joblib
import pandas as pd

st.set_page_config(
    page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä",
    page_icon="üëã",
)

models = {}
models['mlp'] = joblib.load('models/mlp.joblib')
models['rfc'] = joblib.load('models/rfc.joblib')
models['gnb'] = joblib.load('models/gnb.joblib')
models['logreg'] = joblib.load('models/logreg.joblib')

st.write("# –ê–Ω–∞–ª–∏–∑ –Ω–∞–ª–∏—á–∏—è/–æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ñ–≠–°")
data = {}
data['–í–æ–∑—Ä–∞—Å—Ç'] = st.slider('–í–æ–∑—Ä–∞—Å—Ç', min_value=10, max_value=59, value=14)
data['–†–æ—Å—Ç,–º'] = st.slider('–†–æ—Å—Ç, –º', min_value=1.2, max_value=2.0, value=1.86)
data['–ß–°–° –Ω–æ—á—å—é –ú–∞–∫—Å'] = st.slider('–ß–°–° –Ω–æ—á—å—é, –º–∞–∫—Å', min_value=69, max_value=149, value=98)
data['–°–ê–îd'] = st.slider('–°–ê–îd', min_value=88, max_value=136, value=102)
data['–°–ê–îs'] = st.slider('–°–ê–îs', min_value=90, max_value=134, value=100)
data['–ö–æ–ª-–≤–æ —ç–ø–∏–∑–æ–¥–æ–≤ —Å–∏–Ω—É—Å–æ–≤–æ–π —Ç–∞—Ö–∏–∫–∞—Ä–¥–∏–∏'] = st.slider('–ö–æ–ª-–≤–æ —ç–ø–∏–∑–æ–¥–æ–≤ —Å–∏–Ω—É—Å–æ–≤–æ–π —Ç–∞—Ö–∏–∫–∞—Ä–¥–∏–∏', min_value=0, max_value=235, value=32)
data['pNN50 –¥–µ–Ω—å'] = st.slider('pNN50, –¥–µ–Ω—å', min_value=0.9, max_value=33.1, value=19.0)
data['–≠–ø–∏–∑–æ–¥—ã —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–π'] = st.selectbox('–≠–ø–∏–∑–æ–¥—ã —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–π', ['–ù–µ—Ç', '–î–∞'])
data['–ò–Ω–¥–µ–∫—Å –í–∞—Ä–≥–µ (–ò–í)'] = st.slider('–ò–Ω–¥–µ–∫—Å –í–∞—Ä–≥–µ (–ò–í)', min_value=1.08, max_value=2.5, value=1.479)
data['–ò—Ç–æ–≥'] = st.slider('–§–µ–Ω—ã, –ò—Ç–æ–≥', min_value=3.99, max_value=87.83, value=61.44)

def models_report(data):
    keys = ['–†–æ—Å—Ç,–º', '–ß–°–° –Ω–æ—á—å—é –ú–∞–∫—Å', '–°–ê–îd', '–°–ê–îs',
       '–ö–æ–ª-–≤–æ —ç–ø–∏–∑–æ–¥–æ–≤ —Å–∏–Ω—É—Å–æ–≤–æ–π —Ç–∞—Ö–∏–∫–∞—Ä–¥–∏–∏', 'pNN50 –¥–µ–Ω—å',
       '–≠–ø–∏–∑–æ–¥—ã —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–π', '–ò–Ω–¥–µ–∫—Å –í–∞—Ä–≥–µ (–ò–í)', '–ò—Ç–æ–≥', '–í–æ–∑—Ä–∞—Å—Ç']
    df = pd.Series(data).to_frame().T
    df = df[keys]

    st.write('---')
    st.write('# –†–µ–∑—É–ª—å—Ç–∞—Ç')

    st.write('### –ù–µ–π—Ä–æ–Ω–Ω–∞—è —Å–µ—Ç—å')
    st.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ñ–≠–°' if models['mlp'].predict(df)[0] else '–ñ–≠–° –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –Ω–∞–ª–∏—á–∏—è –ñ–≠–°: {models['mlp'].predict_proba(df)[0][1]}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ñ–≠–°: { models['mlp'].predict_proba(df)[0][0]}")

    st.write('### –ë–∞–π–µ—Å–æ–≤—Å–∫–∏–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä')
    st.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ñ–≠–°' if models['gnb'].predict(df)[0] else '–ñ–≠–° –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –Ω–∞–ª–∏—á–∏—è –ñ–≠–°: {models['gnb'].predict_proba(df)[0][1]}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ñ–≠–°: { models['gnb'].predict_proba(df)[0][0]}")

    st.write('### –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è')
    st.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ñ–≠–°' if models['logreg'].predict(df)[0] else '–ñ–≠–° –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –Ω–∞–ª–∏—á–∏—è –ñ–≠–°: {models['logreg'].predict_proba(df)[0][1]}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ñ–≠–°: { models['logreg'].predict_proba(df)[0][0]}")

    st.write('### –°–ª—É—á–∞–π–Ω—ã–π –ª–µ—Å (–¥–µ—Ä–µ–≤—å—è —Ä–µ—à–µ–Ω–∏–π)')
    st.write(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ñ–≠–°' if models['rfc'].predict(df)[0] else '–ñ–≠–° –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –Ω–∞–ª–∏—á–∏—è –ñ–≠–°: {models['rfc'].predict_proba(df)[0][1]}")
    st.write(f"–î–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ñ–≠–°: { models['rfc'].predict_proba(df)[0][0]}")

if st.button('–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç'):
    data['–≠–ø–∏–∑–æ–¥—ã —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–π'] = 1 if data['–≠–ø–∏–∑–æ–¥—ã —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–π'] == '–î–∞' else 0
    models_report(data)